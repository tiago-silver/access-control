
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum UserRole {
  admin
  doorman
}

enum UserDestination {
  A
  B
  C
  D
}

model User {
  id String @id @default(uuid())
  name String 
  registration String @unique
  password String

  role UserRole @default(doorman)

  created_at DateTime @default(now()) @map("created_at")

  registers Register[]
  observations Observation[]

  @@map("users")
}

model Register {
  id String @id @default(uuid())
  name String 
  destination UserDestination
  authorizedBy String @map("authorized_by")
  entry DateTime @default(now())
  exit DateTime?
  observation String?
  userId String  @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])
  
  vehicle Vehicle?

  @@map("registers")
}

model Observation {
  id String @id @default(uuid())
  title String
  description String
  userId String  @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])
  @@map("observations")
}

model Vehicle {
  id String @id @default(uuid())
  plate String @unique
  brand String?
  model String?
  registerId String  @map("register_id") @unique

  register Register @relation(fields: [registerId], references: [id])
  @@map("vehicles")
}